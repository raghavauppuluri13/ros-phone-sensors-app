{"version":3,"sources":["scripts/camera_imu.ts","App.js","reportWebVitals.js","index.js"],"names":["CameraIMU","ros_master_ip","ros","alpha","valpha","z","beta","vbeta","x","gamma","vgamma","y","is_mobile","image_topic","imu_topic","this","test","navigator","userAgent","console","log","ROSLIB","Ros","url","on","error","window","alert","Topic","name","messageType","initialize_event_handlers","location","protocol","href","substring","length","DeviceOrientationEvent","requestPermission","then","response","addEventListener","eventData","catch","DeviceMotionEvent","acceleration","rotation","rotationRate","getImageCb","imageMessage","Message","format","data","replace","publish","beta_radian","Math","PI","gamma_radian","alpha_radian","eurlerpose","THREE","quaternionpose","setFromEuler","imuMessage","header","frame_id","orientation","w","orientation_covariance","angular_velocity","angular_velocity_covariance","linear_acceleration","linear_acceleration_covariance","setInterval","imageSnapshot","imuSnapshot","App","useState","localStorage","getItem","rosMasterIp","setRosMasterIp","frontFacing","setFrontFacing","setItem","width","screen","height","outputDims","videoConstraints","facingMode","exact","webcamRef","useRef","screenshot","current","getScreenshot","style","padding","onChange","event","target","value","onClick","start","initCameraIMU","type","audio","ref","screenshotFormat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA8KeA,E,WA5Jb,WAAYC,GAAwB,yBAdpCC,SAcmC,OAbnCC,WAamC,OAZnCC,YAYmC,OAXnCC,OAWmC,OAVnCC,UAUmC,OATnCC,WASmC,OARnCC,OAQmC,OAPnCC,WAOmC,OANnCC,YAMmC,OALnCC,OAKmC,OAJnCC,eAImC,OAHnCC,iBAGmC,OAFnCC,eAEmC,EACjCC,KAAKH,UAAY,iEAAiEI,KAAKC,UAAUC,WAEjGjB,EAAa,eAAWA,EAAX,SACbkB,QAAQC,IAAInB,GAGZc,KAAKb,IAAM,IAAImB,IAAOC,IAAI,CACxBC,IAAKtB,IAGPc,KAAKb,IAAIsB,GAAG,cAAc,WAAcL,QAAQC,IAAI,qCAEpDL,KAAKb,IAAIsB,GAAG,SAAS,SAAUC,GAASN,QAAQC,IAAI,yCAA0CK,GAAQC,OAAOC,MAAM,2CAEnHZ,KAAKb,IAAIsB,GAAG,SAAS,WAAcL,QAAQC,IAAI,6CAE/CL,KAAKZ,MAAQ,KACbY,KAAKX,OAAS,KACdW,KAAKV,EAAI,KACTU,KAAKT,KAAO,KACZS,KAAKR,MAAQ,KACbQ,KAAKP,EAAI,KACTO,KAAKN,MAAQ,KACbM,KAAKL,OAAS,KACdK,KAAKJ,EAAI,KAETI,KAAKF,YAAc,IAAIQ,IAAOO,MAAM,CAClC1B,IAAKa,KAAKb,IACV2B,KAAM,2BACNC,YAAa,gCAGff,KAAKD,UAAY,IAAIO,IAAOO,MAAM,CAChC1B,IAAKa,KAAKb,IACV2B,KAAM,QACNC,YAAa,oBAEXf,KAAKH,WACPG,KAAKgB,4B,wEAIoB,IAAD,OACO,WAA7BL,OAAOM,SAASC,WAClBP,OAAOM,SAASE,KAAO,SAAWR,OAAOM,SAASE,KAAKC,UAAUT,OAAOM,SAASC,SAASG,SAGpD,qBAA5BC,wBAAiG,oBAA9CA,uBAAuBC,kBAEpFD,uBAAuBC,oBACpBC,MAAK,SAAAC,GAEa,YAAbA,GACFd,OAAOe,iBAAiB,qBAAqB,SAACC,GAE5C,EAAKjC,MAAQiC,EAAUjC,MAGvB,EAAKH,KAAOoC,EAAUpC,KAGtB,EAAKH,MAAQuC,EAAUvC,SACtB,MAGNwC,MAAMxB,QAAQM,OAEjBE,MAAM,yCAG2B,qBAAvBiB,mBAAuF,oBAAzCA,kBAAkBN,kBAE1EM,kBAAkBN,oBACfC,MAAK,SAAAC,GAEa,YAAbA,GACFd,OAAOe,iBAAiB,gBAAgB,SAACC,GAEvC,IAAIG,EAAeH,EAAUG,aAC7B,EAAKrC,EAAIqC,EAAcrC,EACvB,EAAKG,EAAIkC,EAAclC,EACvB,EAAKN,EAAIwC,EAAcxC,EAGvB,IAAIyC,EAAWJ,EAAUK,aACzB,EAAK3C,OAAS0C,EAAU3C,MACxB,EAAKO,OAASoC,EAAUrC,MACxB,EAAKF,MAAQuC,EAAUxC,QACtB,MAGNqC,MAAMxB,QAAQM,OAEjBE,MAAM,sC,oCAKIqB,GACZ,IAAIC,EAAe,IAAI5B,IAAO6B,QAAQ,CACpCC,OAAQ,OACRC,KAAMJ,IAAaK,QAAQ,0BAA2B,MAGxDtC,KAAKF,YAAYyC,QAAQL,K,oCAIzB,IAAIM,GAAgBxC,KAAKT,KAAQ,KAAO,IAAM,EAAIkD,KAAKC,IAAO,EAAID,KAAKC,IACnEC,GAAiB3C,KAAKN,MAAS,KAAO,IAAM,EAAI+C,KAAKC,IAAO,EAAID,KAAKC,IACrEE,GAAiB5C,KAAKZ,MAAS,KAAO,IAAM,EAAIqD,KAAKC,IAAO,EAAID,KAAKC,IACrEG,EAAa,IAAIC,IAAYN,EAAaG,EAAcC,GACxDG,EAAiB,IAAID,IACzBC,EAAeC,aAAaH,GAE5B,IAAII,EAAa,IAAI3C,IAAO6B,QAAQ,CAClCe,OAAQ,CACNC,SAAU,SAEZC,YAAa,CACX3D,EAAGsD,EAAetD,EAClBG,EAAGmD,EAAenD,EAClBN,EAAGyD,EAAezD,EAClB+D,EAAGN,EAAeM,GAEpBC,uBAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjDC,iBAAkB,CAChB9D,EAAGO,KAAKR,MACRI,EAAGI,KAAKL,OACRL,EAAGU,KAAKX,QAEVmE,4BAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtDC,oBAAqB,CACnBhE,EAAGO,KAAKP,EACRG,EAAGI,KAAKJ,EACRN,EAAGU,KAAKV,GAEVoE,+BAAgC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAG3D1D,KAAKD,UAAUwC,QAAQU,K,4BAGnBhB,GAA2B,IAAD,OAC9B0B,aAAY,WACV,EAAKC,cAAc3B,KAClB,KACCjC,KAAKH,WACP8D,aAAY,WACV,EAAKE,gBACJ,S,KCnFMC,MAlFf,WAAgB,IAAD,EACyBC,mBACS,GAA7CpD,OAAOqD,aAAaC,QAAQ,gBAFjB,mBACNC,EADM,KACOC,EADP,OAIyBJ,oBACS,EAA7CpD,OAAOqD,aAAaC,QAAQ,gBALjB,mBAING,EAJM,KAIOC,EAJP,KAOb1D,OAAOqD,aAAaM,QAAQ,cAAeF,GAG3C,IACMG,EAAQ5D,OAAO6D,OAAOD,MAAQ,GAC9BE,EAAgC,IAAvB9D,OAAO6D,OAAOC,OACvBC,EAAa,CAAEH,MAAO,KAAME,OAAQ,MAEtCE,EAAmB,CACrBJ,MAAOA,EACPE,OAAQA,EACRG,WAAYR,EAAc,OAAS,CAAES,MAAO,gBAcxCC,EAAYC,iBAAO,MAEnB9C,EAAa,WACjB,GAAI6C,EAAW,CACb,IAAME,EAAaF,EAAUG,QAAQC,cAAcR,GACnD,GAAIM,EAEF,OAAOA,EAGPrE,OAAOC,MAAP,4BAcN,OACE,sBAAKuE,MAAO,CAAEC,QAAQ,GAAD,OA/CP,GA+CO,OAArB,UACE,2DACA,uBAAOC,SAtCW,SAACC,GACrB3E,OAAOqD,aAAaM,QAAQ,cAAegB,EAAMC,OAAOC,OACxDpF,QAAQC,IAAIiF,EAAMC,OAAOC,OACzBrB,EAAemB,EAAMC,OAAOC,QAmCMA,MAAOtB,IACvC,uBACA,uBACA,wBAAQuB,QAAS,kBAfC,WACpB,IACe,IAAIxG,EAAUiF,GAChBwB,MAAMzD,GACjB,MAAOvB,GACPC,OAAOC,MAAP,gCAAsCF,KAUfiF,IAAvB,wBACA,uBACA,uBACA,0DACA,uBAAON,SAvCe,WACxB1E,OAAOqD,aAAaM,QAAQ,eAAgBF,GAC5CC,GAAgBD,IAqCsBoB,MAAOpB,EAAawB,KAAK,aAC7D,wBAGA,cAAC,IAAD,CACEC,OAAO,EACPpB,OAAQA,EACRqB,IAAKhB,EACLiB,iBAAiB,aACjBxB,MAAOA,EACPI,iBAAkBA,QCpEXqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.597121f9.chunk.js","sourcesContent":["import ROSLIB from \"roslib\";\nimport * as THREE from \"three\";\n\nclass CameraIMU {\n  ros: ROSLIB.Ros;\n  alpha: number | null;\n  valpha: number | null;\n  z: number | null;\n  beta: number | null;\n  vbeta: number | null;\n  x: number | null;\n  gamma: number | null;\n  vgamma: number | null;\n  y: number | null;\n  is_mobile: boolean;\n  image_topic: ROSLIB.Topic;\n  imu_topic: ROSLIB.Topic;\n\n  constructor(ros_master_ip: string) {\n    this.is_mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n    ros_master_ip = `ws://${ros_master_ip}:9090`;\n    console.log(ros_master_ip);\n\n    // INITIALIZATION\n    this.ros = new ROSLIB.Ros({\n      url: ros_master_ip\n    });\n\n    this.ros.on('connection', function () { console.log('Connected to websocket server.'); });\n\n    this.ros.on('error', function (error) { console.log('Error connecting to websocket server: ', error); window.alert('Error connecting to websocket server'); });\n\n    this.ros.on('close', function () { console.log('Connection to websocket server closed.'); });\n\n    this.alpha = null;\n    this.valpha = null;\n    this.z = null;\n    this.beta = null;\n    this.vbeta = null;\n    this.x = null;\n    this.gamma = null;\n    this.vgamma = null;\n    this.y = null;\n\n    this.image_topic = new ROSLIB.Topic({\n      ros: this.ros,\n      name: \"/camera/image/compressed\",\n      messageType: \"sensor_msgs/CompressedImage\",\n    });\n\n    this.imu_topic = new ROSLIB.Topic({\n      ros: this.ros,\n      name: \"/gyro\",\n      messageType: \"sensor_msgs/Imu\",\n    });\n    if (this.is_mobile) {\n      this.initialize_event_handlers();\n    }\n  }\n\n  initialize_event_handlers() {\n    if (window.location.protocol !== \"https:\") {\n      window.location.href = \"https:\" + window.location.href.substring(window.location.protocol.length);\n    }\n\n    if (typeof (DeviceOrientationEvent) !== \"undefined\" && typeof (DeviceOrientationEvent.requestPermission) === \"function\") {\n      // (optional) Do something before API request prompt.\n      DeviceOrientationEvent.requestPermission()\n        .then(response => {\n          // (optional) Do something after API prompt dismissed.\n          if (response === \"granted\") {\n            window.addEventListener(\"deviceorientation\", (eventData) => {\n              // gamma is the left-to-right tilt in degrees, where right is positive\n              this.gamma = eventData.gamma;\n\n              // beta is the front-to-back tilt in degrees, where front is positive\n              this.beta = eventData.beta;\n\n              // alpha is the compass direction the device is facing in degrees\n              this.alpha = eventData.alpha\n            }, false)\n          }\n        })\n        .catch(console.error)\n    } else {\n      alert(\"DeviceOrientationEvent is not defined\");\n    }\n\n    if (typeof (DeviceMotionEvent) !== \"undefined\" && typeof (DeviceMotionEvent.requestPermission) === \"function\") {\n      // (optional) Do something before API request prompt.\n      DeviceMotionEvent.requestPermission()\n        .then(response => {\n          // (optional) Do something after API prompt dismissed.\n          if (response === \"granted\") {\n            window.addEventListener(\"devicemotion\", (eventData) => {\n              // Grab the acceleration from the results\n              var acceleration = eventData.acceleration;\n              this.x = acceleration!.x;\n              this.y = acceleration!.y;\n              this.z = acceleration!.z;\n\n              // Grab the rotation rate from the results\n              var rotation = eventData.rotationRate;\n              this.valpha = rotation!.alpha;\n              this.vgamma = rotation!.gamma;\n              this.vbeta = rotation!.beta;\n            }, false)\n          }\n        })\n        .catch(console.error)\n    } else {\n      alert(\"DeviceMotionEvent is not defined\");\n    }\n  }\n  // function that is run by trigger several times a second\n  // takes snapshot of video to canvas, encodes the images as base 64 and sends it to the ROS topic\n  imageSnapshot(getImageCb: () => string) {\n    var imageMessage = new ROSLIB.Message({\n      format: \"jpeg\",\n      data: getImageCb().replace(\"data:image/jpeg;base64,\", \"\")\n    });\n\n    this.image_topic.publish(imageMessage);\n  }\n\n  imuSnapshot() {\n    var beta_radian = ((this.beta! + 360) / 360 * 2 * Math.PI) % (2 * Math.PI);\n    var gamma_radian = ((this.gamma! + 360) / 360 * 2 * Math.PI) % (2 * Math.PI);\n    var alpha_radian = ((this.alpha! + 360) / 360 * 2 * Math.PI) % (2 * Math.PI);\n    var eurlerpose = new THREE.Euler(beta_radian, gamma_radian, alpha_radian);\n    var quaternionpose = new THREE.Quaternion();\n    quaternionpose.setFromEuler(eurlerpose);\n\n    var imuMessage = new ROSLIB.Message({\n      header: {\n        frame_id: \"world\"\n      },\n      orientation: {\n        x: quaternionpose.x,\n        y: quaternionpose.y,\n        z: quaternionpose.z,\n        w: quaternionpose.w\n      },\n      orientation_covariance: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      angular_velocity: {\n        x: this.vbeta,\n        y: this.vgamma,\n        z: this.valpha,\n      },\n      angular_velocity_covariance: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      linear_acceleration: {\n        x: this.x,\n        y: this.y,\n        z: this.z,\n      },\n      linear_acceleration_covariance: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    });\n\n    this.imu_topic.publish(imuMessage);\n  }\n\n  start(getImageCb: () => string) {\n    setInterval(() => {\n      this.imageSnapshot(getImageCb);\n    }, 100);       // publish an image 4 times per second\n    if (this.is_mobile) {\n      setInterval(() => {\n        this.imuSnapshot();\n      }, 100);       // publish an IMU message 10 times per second\n    }\n  }\n}\n\nexport default CameraIMU;\n","import { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport CameraIMU from \"./scripts/camera_imu.ts\";\n\nfunction App() {\n  const [rosMasterIp, setRosMasterIp] = useState(\n    window.localStorage.getItem('rosMasterIp') | \"\"\n  );\n  const [frontFacing, setFrontFacing] = useState(\n    window.localStorage.getItem('frontFacing') | false\n  );\n  window.localStorage.setItem(\"frontFacing\", frontFacing);\n\n  var camera_imu;\n  const padding = 10;\n  const width = window.screen.width - 2 * padding;\n  const height = window.screen.height * 0.65;\n  const outputDims = { width: 1920, height: 1080 };\n\n  var videoConstraints = {\n    width: width,\n    height: height,\n    facingMode: frontFacing ? \"user\" : { exact: \"environment\" },\n  };\n\n  const onRosIpChange = (event) => {\n    window.localStorage.setItem(\"rosMasterIp\", event.target.value);\n    console.log(event.target.value);\n    setRosMasterIp(event.target.value);\n  };\n\n  const onCameraDirChange = () => {\n    window.localStorage.setItem(\"frontFacing\", !frontFacing);\n    setFrontFacing(!frontFacing);\n  };\n\n  const webcamRef = useRef(null);\n\n  const getImageCb = () => {\n    if (webcamRef) {\n      const screenshot = webcamRef.current.getScreenshot(outputDims);\n      if (screenshot)\n      {\n        return screenshot;\n      }\n      else {\n        window.alert(`Camera not accessible!`);\n      }\n    }\n  };\n\n  const initCameraIMU = () => {\n    try {\n      camera_imu = new CameraIMU(rosMasterIp);\n      camera_imu.start(getImageCb);\n    } catch (error) {\n      window.alert(`An error has occured: ${error}`);\n    }\n  };\n\n  return (\n    <div style={{ padding: `${padding}px` }}>\n      <label>ROS Master IP Address:</label>\n      <input onChange={onRosIpChange} value={rosMasterIp}/>\n      <br />\n      <br />\n      <button onClick={() => initCameraIMU()}>Initialize</button>\n      <br />\n      <br />\n      <label>Front Facing Camera? </label>\n      <input onChange={onCameraDirChange} value={frontFacing} type=\"checkbox\" />\n      <div>\n        \n      </div>\n      <Webcam\n        audio={false}\n        height={height}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={width}\n        videoConstraints={videoConstraints}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}